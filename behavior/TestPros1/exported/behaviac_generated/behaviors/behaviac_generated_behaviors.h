// ---------------------------------------------------------------------
// THIS FILE IS AUTO-GENERATED BY BEHAVIAC DESIGNER, SO PLEASE DON'T MODIFY IT BY YOURSELF!
// ---------------------------------------------------------------------

#ifndef _BEHAVIAC_GENERATED_BEHAVIORS_H_
#define _BEHAVIAC_GENERATED_BEHAVIORS_H_

#include "../types/behaviac_types.h"

namespace behaviac
{
	// Source file: FirstBT

	class DecoratorLoop_bt_FirstBT_node4 : public DecoratorLoop
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(DecoratorLoop_bt_FirstBT_node4, DecoratorLoop);
		DecoratorLoop_bt_FirstBT_node4()
		{
			m_bDecorateWhenChildEnds = true;
			m_bDoneWithinFrame = false;
		}
	protected:
		virtual int GetCount(Agent* pAgent) const
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			return 3;
		}
	};

	class Assignment_bt_FirstBT_node3 : public Assignment
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Assignment_bt_FirstBT_node3, Assignment);
		Assignment_bt_FirstBT_node3()
		{
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			EBTStatus result = BT_SUCCESS;
			int opr = ((FisrtAgent*)pAgent)->PRe(((FisrtAgent*)pAgent)->P2);
			((FisrtAgent*)pAgent)->P2 = opr;
			return result;
		}
	};

	class Action_bt_FirstBT_node2 : public Action
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Action_bt_FirstBT_node2, Action);
		Action_bt_FirstBT_node2()
		{
			method_p0 = (char*)("wwww");
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			((FisrtAgent*)pAgent)->_Execute_Method_<METHOD_TYPE_FisrtAgent_SayHello, void, behaviac::string& >(method_p0);
			return BT_SUCCESS;
		}
		behaviac::string method_p0;
	};

	class Condition_bt_FirstBT_node1 : public Condition
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Condition_bt_FirstBT_node1, Condition);
		Condition_bt_FirstBT_node1()
		{
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			int& opl = ((FisrtAgent*)pAgent)->P2;
			int opr = 2;
			bool op = PrivateDetails::Greater(opl, opr);
			return op ? BT_SUCCESS : BT_FAILURE;
		}
	};

	class bt_FirstBT
	{
	public:
		static bool Create(BehaviorTree* pBT)
		{
			pBT->SetClassNameString("BehaviorTree");
			pBT->SetId((uint16_t)-1);
			pBT->SetName("FirstBT");
			pBT->SetIsFSM(false);
#if !BEHAVIAC_RELEASE
			pBT->SetAgentType("FisrtAgent");
#endif
			// children
			{
				DecoratorLoop_bt_FirstBT_node4* node4 = BEHAVIAC_NEW DecoratorLoop_bt_FirstBT_node4;
				node4->SetClassNameString("DecoratorLoop");
				node4->SetId(4);
#if !BEHAVIAC_RELEASE
				node4->SetAgentType("FisrtAgent");
#endif
				pBT->AddChild(node4);
				{
					Sequence* node0 = BEHAVIAC_NEW Sequence;
					node0->SetClassNameString("Sequence");
					node0->SetId(0);
#if !BEHAVIAC_RELEASE
					node0->SetAgentType("FisrtAgent");
#endif
					node4->AddChild(node0);
					{
						Assignment_bt_FirstBT_node3* node3 = BEHAVIAC_NEW Assignment_bt_FirstBT_node3;
						node3->SetClassNameString("Assignment");
						node3->SetId(3);
#if !BEHAVIAC_RELEASE
						node3->SetAgentType("FisrtAgent");
#endif
						node0->AddChild(node3);
						node0->SetHasEvents(node0->HasEvents() | node3->HasEvents());
					}
					{
						Selector* node5 = BEHAVIAC_NEW Selector;
						node5->SetClassNameString("Selector");
						node5->SetId(5);
#if !BEHAVIAC_RELEASE
						node5->SetAgentType("FisrtAgent");
#endif
						node0->AddChild(node5);
						{
							Action_bt_FirstBT_node2* node2 = BEHAVIAC_NEW Action_bt_FirstBT_node2;
							node2->SetClassNameString("Action");
							node2->SetId(2);
#if !BEHAVIAC_RELEASE
							node2->SetAgentType("FisrtAgent");
#endif
							node5->AddChild(node2);
							node5->SetHasEvents(node5->HasEvents() | node2->HasEvents());
						}
						{
							Condition_bt_FirstBT_node1* node1 = BEHAVIAC_NEW Condition_bt_FirstBT_node1;
							node1->SetClassNameString("Condition");
							node1->SetId(1);
#if !BEHAVIAC_RELEASE
							node1->SetAgentType("FisrtAgent");
#endif
							node5->AddChild(node1);
							node5->SetHasEvents(node5->HasEvents() | node1->HasEvents());
						}
						node0->SetHasEvents(node0->HasEvents() | node5->HasEvents());
					}
					node4->SetHasEvents(node4->HasEvents() | node0->HasEvents());
				}
				pBT->SetHasEvents(pBT->HasEvents() | node4->HasEvents());
			}
			return true;
		}
	};

	// Source file: main

	class Task_bt_main_node0 : public Task
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Task_bt_main_node0, Task);
		Task_bt_main_node0()
		{
			this->m_task = AgentMeta::ParseMethod("Self.FisrtAgent::event_task(0)");
			BEHAVIAC_ASSERT(this->m_task != NULL);
			this->m_bHTN = false;
		}
	protected:
	};

	class Condition_bt_main_node3 : public Condition
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Condition_bt_main_node3, Condition);
		Condition_bt_main_node3()
		{
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			BEHAVIAC_ASSERT(behaviac::MakeVariableId("_$local_task_param_$_0") == 2009726548u);
			int& opl = (int&)pAgent->GetVariable<int >(2009726548u);
			int opr = 2;
			bool op = PrivateDetails::Equal(opl, opr);
			return op ? BT_SUCCESS : BT_FAILURE;
		}
	};

	class Action_bt_main_node2 : public Action
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Action_bt_main_node2, Action);
		Action_bt_main_node2()
		{
			method_p0 = (char*)("wwww");
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			((FisrtAgent*)pAgent)->_Execute_Method_<METHOD_TYPE_FisrtAgent_SayHello, void, behaviac::string& >(method_p0);
			return BT_SUCCESS;
		}
		behaviac::string method_p0;
	};

	class bt_main
	{
	public:
		static bool Create(BehaviorTree* pBT)
		{
			pBT->SetClassNameString("BehaviorTree");
			pBT->SetId((uint16_t)-1);
			pBT->SetName("main");
			pBT->SetIsFSM(false);
#if !BEHAVIAC_RELEASE
			pBT->SetAgentType("FisrtAgent");
#endif
			// locals
			pBT->AddLocal("FisrtAgent", "int", "_$local_task_param_$_0", "0");
			// children
			{
				Task_bt_main_node0* node0 = BEHAVIAC_NEW Task_bt_main_node0;
				node0->SetClassNameString("Task");
				node0->SetId(0);
#if !BEHAVIAC_RELEASE
				node0->SetAgentType("FisrtAgent");
#endif
				pBT->AddChild(node0);
				{
					Sequence* node1 = BEHAVIAC_NEW Sequence;
					node1->SetClassNameString("Sequence");
					node1->SetId(1);
#if !BEHAVIAC_RELEASE
					node1->SetAgentType("FisrtAgent");
#endif
					node0->AddChild(node1);
					{
						Condition_bt_main_node3* node3 = BEHAVIAC_NEW Condition_bt_main_node3;
						node3->SetClassNameString("Condition");
						node3->SetId(3);
#if !BEHAVIAC_RELEASE
						node3->SetAgentType("FisrtAgent");
#endif
						node1->AddChild(node3);
						node1->SetHasEvents(node1->HasEvents() | node3->HasEvents());
					}
					{
						Action_bt_main_node2* node2 = BEHAVIAC_NEW Action_bt_main_node2;
						node2->SetClassNameString("Action");
						node2->SetId(2);
#if !BEHAVIAC_RELEASE
						node2->SetAgentType("FisrtAgent");
#endif
						node1->AddChild(node2);
						node1->SetHasEvents(node1->HasEvents() | node2->HasEvents());
					}
					node0->SetHasEvents(node0->HasEvents() | node1->HasEvents());
				}
				pBT->SetHasEvents(pBT->HasEvents() | node0->HasEvents());
			}
			return true;
		}
	};

	// Source file: ParentBT

	class Assignment_bt_ParentBT_node1 : public Assignment
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Assignment_bt_ParentBT_node1, Assignment);
		Assignment_bt_ParentBT_node1()
		{
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			EBTStatus result = BT_SUCCESS;
			int opr = 3;
			((FisrtAgent*)pAgent)->P2 = opr;
			return result;
		}
	};

	class Condition_bt_ParentBT_node2 : public Condition
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Condition_bt_ParentBT_node2, Condition);
		Condition_bt_ParentBT_node2()
		{
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			int& opl = ((FisrtAgent*)pAgent)->P2;
			int opr = 5;
			bool op = PrivateDetails::Greater(opl, opr);
			return op ? BT_SUCCESS : BT_FAILURE;
		}
	};

	class Action_bt_ParentBT_node3 : public Action
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Action_bt_ParentBT_node3, Action);
		Action_bt_ParentBT_node3()
		{
			method_p0 = (char*)("22222");
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			((FisrtAgent*)pAgent)->_Execute_Method_<METHOD_TYPE_FisrtAgent_SayHello, void, behaviac::string& >(method_p0);
			return BT_SUCCESS;
		}
		behaviac::string method_p0;
	};

	class bt_ParentBT
	{
	public:
		static bool Create(BehaviorTree* pBT)
		{
			pBT->SetClassNameString("BehaviorTree");
			pBT->SetId((uint16_t)-1);
			pBT->SetName("ParentBT");
			pBT->SetIsFSM(false);
#if !BEHAVIAC_RELEASE
			pBT->SetAgentType("FisrtAgent");
#endif
			// locals
			pBT->AddLocal("FisrtAgent", "int", "_$local_task_param_$_0", "0");
			// children
			{
				Sequence* node4 = BEHAVIAC_NEW Sequence;
				node4->SetClassNameString("Sequence");
				node4->SetId(4);
#if !BEHAVIAC_RELEASE
				node4->SetAgentType("FisrtAgent");
#endif
				pBT->AddChild(node4);
				{
					Assignment_bt_ParentBT_node1* node1 = BEHAVIAC_NEW Assignment_bt_ParentBT_node1;
					node1->SetClassNameString("Assignment");
					node1->SetId(1);
#if !BEHAVIAC_RELEASE
					node1->SetAgentType("FisrtAgent");
#endif
					node4->AddChild(node1);
					node4->SetHasEvents(node4->HasEvents() | node1->HasEvents());
				}
				{
					Condition_bt_ParentBT_node2* node2 = BEHAVIAC_NEW Condition_bt_ParentBT_node2;
					node2->SetClassNameString("Condition");
					node2->SetId(2);
#if !BEHAVIAC_RELEASE
					node2->SetAgentType("FisrtAgent");
#endif
					node4->AddChild(node2);
					node4->SetHasEvents(node4->HasEvents() | node2->HasEvents());
				}
				{
					Action_bt_ParentBT_node3* node3 = BEHAVIAC_NEW Action_bt_ParentBT_node3;
					node3->SetClassNameString("Action");
					node3->SetId(3);
#if !BEHAVIAC_RELEASE
					node3->SetAgentType("FisrtAgent");
#endif
					node4->AddChild(node3);
					node4->SetHasEvents(node4->HasEvents() | node3->HasEvents());
				}
				pBT->SetHasEvents(pBT->HasEvents() | node4->HasEvents());
			}
			return true;
		}
	};

	// Source file: SecondBT

	class Assignment_bt_SecondBT_node1 : public Assignment
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Assignment_bt_SecondBT_node1, Assignment);
		Assignment_bt_SecondBT_node1()
		{
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			EBTStatus result = BT_SUCCESS;
			int opr = 8;
			Agent* pAgent_opl = Agent::GetInstance(pAgent, "SecondAgentInstance");
			BEHAVIAC_ASSERT(pAgent_opl);
			((SecondAgent*)pAgent_opl)->_Get_Property_<PROPERTY_TYPE_SecondAgent_p3, int >() = opr;
			return result;
		}
	};

	class Assignment_bt_SecondBT_node3 : public Assignment
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Assignment_bt_SecondBT_node3, Assignment);
		Assignment_bt_SecondBT_node3()
		{
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			EBTStatus result = BT_SUCCESS;
			int opr = 5;
			((FisrtAgent*)pAgent)->P2 = opr;
			return result;
		}
	};

	class Action_bt_SecondBT_node5 : public Action
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Action_bt_SecondBT_node5, Action);
		Action_bt_SecondBT_node5()
		{
			method_p0 = (char*)("");
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			((FisrtAgent*)pAgent)->m1(method_p0);
			return BT_SUCCESS;
		}
		behaviac::string method_p0;
	};

	class Condition_bt_SecondBT_node2 : public Condition
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Condition_bt_SecondBT_node2, Condition);
		Condition_bt_SecondBT_node2()
		{
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			Agent* pAgent_opl = Agent::GetInstance(pAgent, "SecondAgentInstance");
			BEHAVIAC_ASSERT(pAgent_opl);
			int& opl = ((SecondAgent*)pAgent_opl)->_Get_Property_<PROPERTY_TYPE_SecondAgent_p3, int >();
			int& opr = ((FisrtAgent*)pAgent)->P2;
			bool op = PrivateDetails::Greater(opl, opr);
			return op ? BT_SUCCESS : BT_FAILURE;
		}
	};

	class Action_bt_SecondBT_node4 : public Action
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Action_bt_SecondBT_node4, Action);
		Action_bt_SecondBT_node4()
		{
			method_p0 = (char*)("eeee");
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			((FisrtAgent*)pAgent)->_Execute_Method_<METHOD_TYPE_FisrtAgent_SayHello, void, behaviac::string& >(method_p0);
			return BT_SUCCESS;
		}
		behaviac::string method_p0;
	};

	class bt_SecondBT
	{
	public:
		static bool Create(BehaviorTree* pBT)
		{
			pBT->SetClassNameString("BehaviorTree");
			pBT->SetId((uint16_t)-1);
			pBT->SetName("SecondBT");
			pBT->SetIsFSM(false);
#if !BEHAVIAC_RELEASE
			pBT->SetAgentType("FisrtAgent");
#endif
			// children
			{
				Sequence* node0 = BEHAVIAC_NEW Sequence;
				node0->SetClassNameString("Sequence");
				node0->SetId(0);
#if !BEHAVIAC_RELEASE
				node0->SetAgentType("FisrtAgent");
#endif
				pBT->AddChild(node0);
				{
					Assignment_bt_SecondBT_node1* node1 = BEHAVIAC_NEW Assignment_bt_SecondBT_node1;
					node1->SetClassNameString("Assignment");
					node1->SetId(1);
#if !BEHAVIAC_RELEASE
					node1->SetAgentType("FisrtAgent");
#endif
					node0->AddChild(node1);
					node0->SetHasEvents(node0->HasEvents() | node1->HasEvents());
				}
				{
					Assignment_bt_SecondBT_node3* node3 = BEHAVIAC_NEW Assignment_bt_SecondBT_node3;
					node3->SetClassNameString("Assignment");
					node3->SetId(3);
#if !BEHAVIAC_RELEASE
					node3->SetAgentType("FisrtAgent");
#endif
					node0->AddChild(node3);
					node0->SetHasEvents(node0->HasEvents() | node3->HasEvents());
				}
				{
					Action_bt_SecondBT_node5* node5 = BEHAVIAC_NEW Action_bt_SecondBT_node5;
					node5->SetClassNameString("Action");
					node5->SetId(5);
#if !BEHAVIAC_RELEASE
					node5->SetAgentType("FisrtAgent");
#endif
					node0->AddChild(node5);
					node0->SetHasEvents(node0->HasEvents() | node5->HasEvents());
				}
				{
					Condition_bt_SecondBT_node2* node2 = BEHAVIAC_NEW Condition_bt_SecondBT_node2;
					node2->SetClassNameString("Condition");
					node2->SetId(2);
#if !BEHAVIAC_RELEASE
					node2->SetAgentType("FisrtAgent");
#endif
					node0->AddChild(node2);
					node0->SetHasEvents(node0->HasEvents() | node2->HasEvents());
				}
				{
					Action_bt_SecondBT_node4* node4 = BEHAVIAC_NEW Action_bt_SecondBT_node4;
					node4->SetClassNameString("Action");
					node4->SetId(4);
#if !BEHAVIAC_RELEASE
					node4->SetAgentType("FisrtAgent");
#endif
					node0->AddChild(node4);
					node0->SetHasEvents(node0->HasEvents() | node4->HasEvents());
				}
				pBT->SetHasEvents(pBT->HasEvents() | node0->HasEvents());
			}
			return true;
		}
	};

	// Source file: Struct

	class Action_bt_Struct_node19 : public Action
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Action_bt_Struct_node19, Action);
		Action_bt_Struct_node19()
		{
			method_p0 = (char*)("dee");
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			((FisrtAgent*)pAgent)->_Execute_Method_<METHOD_TYPE_FisrtAgent_SayHello, void, behaviac::string& >(method_p0);
			return BT_SUCCESS;
		}
		behaviac::string method_p0;
	};

	class Assignment_bt_Struct_node1 : public Assignment
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Assignment_bt_Struct_node1, Assignment);
		Assignment_bt_Struct_node1()
		{
			opr.s1 = 4;
			opr.s2 = 5;
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			EBTStatus result = BT_SUCCESS;
			((FisrtAgent*)pAgent)->_Get_Property_<PROPERTY_TYPE_FisrtAgent_pp3, FirstStruct* >() = opr;
			return result;
		}
		FirstStruct* opr;
	};

	class Condition_bt_Struct_node2 : public Condition
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Condition_bt_Struct_node2, Condition);
		Condition_bt_Struct_node2()
		{
			opr.s1 = 4;
			opr.s2 = 5;
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			FirstStruct& opl = ((FisrtAgent*)pAgent)->_Get_Property_<PROPERTY_TYPE_FisrtAgent_pp3, FirstStruct* >();
			bool op = PrivateDetails::Equal(opl, opr);
			return op ? BT_SUCCESS : BT_FAILURE;
		}
		FirstStruct opr;
	};

	class Assignment_bt_Struct_node5 : public Assignment
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Assignment_bt_Struct_node5, Assignment);
		Assignment_bt_Struct_node5()
		{
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			EBTStatus result = BT_SUCCESS;
			FirstEnum opr = e2;
			((FisrtAgent*)pAgent)->_Get_Property_<PROPERTY_TYPE_FisrtAgent_type, FirstEnum >() = opr;
			return result;
		}
	};

	class Parallel_bt_Struct_node6 : public Parallel
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Parallel_bt_Struct_node6, Parallel);
		Parallel_bt_Struct_node6()
		{
			m_failPolicy = FAIL_ON_ONE;
			m_succeedPolicy = SUCCEED_ON_ALL;
			m_exitPolicy = EXIT_ABORT_RUNNINGSIBLINGS;
			m_childFinishPolicy = CHILDFINISH_LOOP;
		}
	protected:
	};

	class Condition_bt_Struct_node4 : public Condition
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Condition_bt_Struct_node4, Condition);
		Condition_bt_Struct_node4()
		{
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			FirstEnum& opl = ((FisrtAgent*)pAgent)->_Get_Property_<PROPERTY_TYPE_FisrtAgent_type, FirstEnum >();
			FirstEnum opr = e2;
			bool op = PrivateDetails::Equal(opl, opr);
			return op ? BT_SUCCESS : BT_FAILURE;
		}
	};

	class Action_bt_Struct_node3 : public Action
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Action_bt_Struct_node3, Action);
		Action_bt_Struct_node3()
		{
			method_p0 = (char*)("wwewewe");
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			((FisrtAgent*)pAgent)->_Execute_Method_<METHOD_TYPE_FisrtAgent_SayHello, void, behaviac::string& >(method_p0);
			return BT_SUCCESS;
		}
		behaviac::string method_p0;
	};

	class SequenceStochastic_bt_Struct_node8 : public SequenceStochastic
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(SequenceStochastic_bt_Struct_node8, SequenceStochastic);
		SequenceStochastic_bt_Struct_node8()
		{
		}
	public:
		void Initialize(const char* method)
		{
			this->m_method = AgentMeta::ParseMethod(method);
		}
	};

	class Action_bt_Struct_node9 : public Action
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Action_bt_Struct_node9, Action);
		Action_bt_Struct_node9()
		{
			method_p0 = (char*)("C");
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			((FisrtAgent*)pAgent)->_Execute_Method_<METHOD_TYPE_FisrtAgent_SayHello, void, behaviac::string& >(method_p0);
			return BT_SUCCESS;
		}
		behaviac::string method_p0;
	};

	class Action_bt_Struct_node10 : public Action
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Action_bt_Struct_node10, Action);
		Action_bt_Struct_node10()
		{
			method_p0 = (char*)("B");
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			((FisrtAgent*)pAgent)->_Execute_Method_<METHOD_TYPE_FisrtAgent_SayHello, void, behaviac::string& >(method_p0);
			return BT_SUCCESS;
		}
		behaviac::string method_p0;
	};

	class Action_bt_Struct_node11 : public Action
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Action_bt_Struct_node11, Action);
		Action_bt_Struct_node11()
		{
			method_p0 = (char*)("A");
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			((FisrtAgent*)pAgent)->_Execute_Method_<METHOD_TYPE_FisrtAgent_SayHello, void, behaviac::string& >(method_p0);
			return BT_SUCCESS;
		}
		behaviac::string method_p0;
	};

	class SelectorProbability_bt_Struct_node12 : public SelectorProbability
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(SelectorProbability_bt_Struct_node12, SelectorProbability);
		SelectorProbability_bt_Struct_node12()
		{
		}
	public:
		void Initialize(const char* method)
		{
			this->m_method = AgentMeta::ParseMethod(method);
		}
	};

	class DecoratorWeight_bt_Struct_node13 : public DecoratorWeight
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(DecoratorWeight_bt_Struct_node13, DecoratorWeight);
		DecoratorWeight_bt_Struct_node13()
		{
			m_bDecorateWhenChildEnds = false;
		}
	protected:
		virtual int GetWeight(Agent* pAgent) const
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			return 40;
		}
	};

	class Action_bt_Struct_node17 : public Action
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Action_bt_Struct_node17, Action);
		Action_bt_Struct_node17()
		{
			method_p0 = (char*)("40");
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			((FisrtAgent*)pAgent)->_Execute_Method_<METHOD_TYPE_FisrtAgent_SayHello, void, behaviac::string& >(method_p0);
			return BT_SUCCESS;
		}
		behaviac::string method_p0;
	};

	class DecoratorWeight_bt_Struct_node15 : public DecoratorWeight
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(DecoratorWeight_bt_Struct_node15, DecoratorWeight);
		DecoratorWeight_bt_Struct_node15()
		{
			m_bDecorateWhenChildEnds = false;
		}
	protected:
		virtual int GetWeight(Agent* pAgent) const
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			return 50;
		}
	};

	class Action_bt_Struct_node18 : public Action
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Action_bt_Struct_node18, Action);
		Action_bt_Struct_node18()
		{
			method_p0 = (char*)("50");
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			((FisrtAgent*)pAgent)->_Execute_Method_<METHOD_TYPE_FisrtAgent_SayHello, void, behaviac::string& >(method_p0);
			return BT_SUCCESS;
		}
		behaviac::string method_p0;
	};

	class Action_bt_Struct_node21 : public Action
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Action_bt_Struct_node21, Action);
		Action_bt_Struct_node21()
		{
			method_p0 = (char*)("sasdsad");
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			((FisrtAgent*)pAgent)->_Execute_Method_<METHOD_TYPE_FisrtAgent_SayHello, void, behaviac::string& >(method_p0);
			return BT_SUCCESS;
		}
		behaviac::string method_p0;
	};

	class bt_Struct
	{
	public:
		static bool Create(BehaviorTree* pBT)
		{
			pBT->SetClassNameString("BehaviorTree");
			pBT->SetId((uint16_t)-1);
			pBT->SetName("Struct");
			pBT->SetIsFSM(false);
#if !BEHAVIAC_RELEASE
			pBT->SetAgentType("FisrtAgent");
#endif
			// children
			{
				Sequence* node20 = BEHAVIAC_NEW Sequence;
				node20->SetClassNameString("Sequence");
				node20->SetId(20);
#if !BEHAVIAC_RELEASE
				node20->SetAgentType("FisrtAgent");
#endif
				pBT->AddChild(node20);
				{
					Sequence* node0 = BEHAVIAC_NEW Sequence;
					node0->SetClassNameString("Sequence");
					node0->SetId(0);
#if !BEHAVIAC_RELEASE
					node0->SetAgentType("FisrtAgent");
#endif
					node20->AddChild(node0);
					{
						Action_bt_Struct_node19* node19 = BEHAVIAC_NEW Action_bt_Struct_node19;
						node19->SetClassNameString("Action");
						node19->SetId(19);
#if !BEHAVIAC_RELEASE
						node19->SetAgentType("FisrtAgent");
#endif
						node0->AddChild(node19);
						node0->SetHasEvents(node0->HasEvents() | node19->HasEvents());
					}
					{
						Assignment_bt_Struct_node1* node1 = BEHAVIAC_NEW Assignment_bt_Struct_node1;
						node1->SetClassNameString("Assignment");
						node1->SetId(1);
#if !BEHAVIAC_RELEASE
						node1->SetAgentType("FisrtAgent");
#endif
						node0->AddChild(node1);
						node0->SetHasEvents(node0->HasEvents() | node1->HasEvents());
					}
					{
						Condition_bt_Struct_node2* node2 = BEHAVIAC_NEW Condition_bt_Struct_node2;
						node2->SetClassNameString("Condition");
						node2->SetId(2);
#if !BEHAVIAC_RELEASE
						node2->SetAgentType("FisrtAgent");
#endif
						node0->AddChild(node2);
						node0->SetHasEvents(node0->HasEvents() | node2->HasEvents());
					}
					{
						Assignment_bt_Struct_node5* node5 = BEHAVIAC_NEW Assignment_bt_Struct_node5;
						node5->SetClassNameString("Assignment");
						node5->SetId(5);
#if !BEHAVIAC_RELEASE
						node5->SetAgentType("FisrtAgent");
#endif
						node0->AddChild(node5);
						node0->SetHasEvents(node0->HasEvents() | node5->HasEvents());
					}
					{
						Sequence* node7 = BEHAVIAC_NEW Sequence;
						node7->SetClassNameString("Sequence");
						node7->SetId(7);
#if !BEHAVIAC_RELEASE
						node7->SetAgentType("FisrtAgent");
#endif
						node0->AddChild(node7);
						{
							Parallel_bt_Struct_node6* node6 = BEHAVIAC_NEW Parallel_bt_Struct_node6;
							node6->SetClassNameString("Parallel");
							node6->SetId(6);
#if !BEHAVIAC_RELEASE
							node6->SetAgentType("FisrtAgent");
#endif
							node7->AddChild(node6);
							{
								Condition_bt_Struct_node4* node4 = BEHAVIAC_NEW Condition_bt_Struct_node4;
								node4->SetClassNameString("Condition");
								node4->SetId(4);
#if !BEHAVIAC_RELEASE
								node4->SetAgentType("FisrtAgent");
#endif
								node6->AddChild(node4);
								node6->SetHasEvents(node6->HasEvents() | node4->HasEvents());
							}
							{
								Action_bt_Struct_node3* node3 = BEHAVIAC_NEW Action_bt_Struct_node3;
								node3->SetClassNameString("Action");
								node3->SetId(3);
#if !BEHAVIAC_RELEASE
								node3->SetAgentType("FisrtAgent");
#endif
								node6->AddChild(node3);
								node6->SetHasEvents(node6->HasEvents() | node3->HasEvents());
							}
							node7->SetHasEvents(node7->HasEvents() | node6->HasEvents());
						}
						{
							SequenceStochastic_bt_Struct_node8* node8 = BEHAVIAC_NEW SequenceStochastic_bt_Struct_node8;
							node8->SetClassNameString("SequenceStochastic");
							node8->SetId(8);
#if !BEHAVIAC_RELEASE
							node8->SetAgentType("FisrtAgent");
#endif
							node7->AddChild(node8);
							{
								Action_bt_Struct_node9* node9 = BEHAVIAC_NEW Action_bt_Struct_node9;
								node9->SetClassNameString("Action");
								node9->SetId(9);
#if !BEHAVIAC_RELEASE
								node9->SetAgentType("FisrtAgent");
#endif
								node8->AddChild(node9);
								node8->SetHasEvents(node8->HasEvents() | node9->HasEvents());
							}
							{
								Action_bt_Struct_node10* node10 = BEHAVIAC_NEW Action_bt_Struct_node10;
								node10->SetClassNameString("Action");
								node10->SetId(10);
#if !BEHAVIAC_RELEASE
								node10->SetAgentType("FisrtAgent");
#endif
								node8->AddChild(node10);
								node8->SetHasEvents(node8->HasEvents() | node10->HasEvents());
							}
							{
								Action_bt_Struct_node11* node11 = BEHAVIAC_NEW Action_bt_Struct_node11;
								node11->SetClassNameString("Action");
								node11->SetId(11);
#if !BEHAVIAC_RELEASE
								node11->SetAgentType("FisrtAgent");
#endif
								node8->AddChild(node11);
								node8->SetHasEvents(node8->HasEvents() | node11->HasEvents());
							}
							node7->SetHasEvents(node7->HasEvents() | node8->HasEvents());
						}
						{
							SelectorProbability_bt_Struct_node12* node12 = BEHAVIAC_NEW SelectorProbability_bt_Struct_node12;
							node12->SetClassNameString("SelectorProbability");
							node12->SetId(12);
#if !BEHAVIAC_RELEASE
							node12->SetAgentType("FisrtAgent");
#endif
							node7->AddChild(node12);
							{
								DecoratorWeight_bt_Struct_node13* node13 = BEHAVIAC_NEW DecoratorWeight_bt_Struct_node13;
								node13->SetClassNameString("DecoratorWeight");
								node13->SetId(13);
#if !BEHAVIAC_RELEASE
								node13->SetAgentType("FisrtAgent");
#endif
								node12->AddChild(node13);
								{
									Selector* node14 = BEHAVIAC_NEW Selector;
									node14->SetClassNameString("Selector");
									node14->SetId(14);
#if !BEHAVIAC_RELEASE
									node14->SetAgentType("FisrtAgent");
#endif
									node13->AddChild(node14);
									{
										Action_bt_Struct_node17* node17 = BEHAVIAC_NEW Action_bt_Struct_node17;
										node17->SetClassNameString("Action");
										node17->SetId(17);
#if !BEHAVIAC_RELEASE
										node17->SetAgentType("FisrtAgent");
#endif
										node14->AddChild(node17);
										node14->SetHasEvents(node14->HasEvents() | node17->HasEvents());
									}
									node13->SetHasEvents(node13->HasEvents() | node14->HasEvents());
								}
								node12->SetHasEvents(node12->HasEvents() | node13->HasEvents());
							}
							{
								DecoratorWeight_bt_Struct_node15* node15 = BEHAVIAC_NEW DecoratorWeight_bt_Struct_node15;
								node15->SetClassNameString("DecoratorWeight");
								node15->SetId(15);
#if !BEHAVIAC_RELEASE
								node15->SetAgentType("FisrtAgent");
#endif
								node12->AddChild(node15);
								{
									Selector* node16 = BEHAVIAC_NEW Selector;
									node16->SetClassNameString("Selector");
									node16->SetId(16);
#if !BEHAVIAC_RELEASE
									node16->SetAgentType("FisrtAgent");
#endif
									node15->AddChild(node16);
									{
										Action_bt_Struct_node18* node18 = BEHAVIAC_NEW Action_bt_Struct_node18;
										node18->SetClassNameString("Action");
										node18->SetId(18);
#if !BEHAVIAC_RELEASE
										node18->SetAgentType("FisrtAgent");
#endif
										node16->AddChild(node18);
										node16->SetHasEvents(node16->HasEvents() | node18->HasEvents());
									}
									node15->SetHasEvents(node15->HasEvents() | node16->HasEvents());
								}
								node12->SetHasEvents(node12->HasEvents() | node15->HasEvents());
							}
							node7->SetHasEvents(node7->HasEvents() | node12->HasEvents());
						}
						node0->SetHasEvents(node0->HasEvents() | node7->HasEvents());
					}
					node20->SetHasEvents(node20->HasEvents() | node0->HasEvents());
				}
				{
					Action_bt_Struct_node21* node21 = BEHAVIAC_NEW Action_bt_Struct_node21;
					node21->SetClassNameString("Action");
					node21->SetId(21);
#if !BEHAVIAC_RELEASE
					node21->SetAgentType("FisrtAgent");
#endif
					node20->AddChild(node21);
					node20->SetHasEvents(node20->HasEvents() | node21->HasEvents());
				}
				pBT->SetHasEvents(pBT->HasEvents() | node20->HasEvents());
			}
			return true;
		}
	};

	// Source file: sub

	class Event_bt_sub_attach2 : public Event
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Event_bt_sub_attach2, Event);
		Event_bt_sub_attach2()
		{
		}
	public:
		void Initialize(const char* eventName, const char* referencedBehavior, TriggerMode mode, bool once)
		{
			this->m_event = AgentMeta::ParseMethod(eventName, this->m_eventName);
			this->m_referencedBehaviorPath = referencedBehavior;
			this->m_triggerMode = mode;
			this->m_bTriggeredOnce = once;
		}
	};

	class Action_bt_sub_node1 : public Action
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Action_bt_sub_node1, Action);
		Action_bt_sub_node1()
		{
			method_p0 = (char*)("ddddasdad");
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			((FisrtAgent*)pAgent)->_Execute_Method_<METHOD_TYPE_FisrtAgent_SayHello, void, behaviac::string& >(method_p0);
			return BT_RUNNING;
		}
		behaviac::string method_p0;
	};

	class Assignment_bt_sub_node4 : public Assignment
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Assignment_bt_sub_node4, Assignment);
		Assignment_bt_sub_node4()
		{
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			EBTStatus result = BT_SUCCESS;
			int opr = 1;
			((FisrtAgent*)pAgent)->P2 = opr;
			return result;
		}
	};

	class Condition_bt_sub_node5 : public Condition
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Condition_bt_sub_node5, Condition);
		Condition_bt_sub_node5()
		{
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			int& opl = ((FisrtAgent*)pAgent)->P2;
			int opr = 1;
			bool op = PrivateDetails::Equal(opl, opr);
			return op ? BT_SUCCESS : BT_FAILURE;
		}
	};

	class Action_bt_sub_node3 : public Action
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Action_bt_sub_node3, Action);
		Action_bt_sub_node3()
		{
			method_p0 = (char*)("222222");
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			((FisrtAgent*)pAgent)->_Execute_Method_<METHOD_TYPE_FisrtAgent_SayHello, void, behaviac::string& >(method_p0);
			return BT_SUCCESS;
		}
		behaviac::string method_p0;
	};

	class bt_sub
	{
	public:
		static bool Create(BehaviorTree* pBT)
		{
			pBT->SetClassNameString("BehaviorTree");
			pBT->SetId((uint16_t)-1);
			pBT->SetName("sub");
			pBT->SetIsFSM(false);
#if !BEHAVIAC_RELEASE
			pBT->SetAgentType("FisrtAgent");
#endif
			// children
			{
				Sequence* node0 = BEHAVIAC_NEW Sequence;
				node0->SetClassNameString("Sequence");
				node0->SetId(0);
#if !BEHAVIAC_RELEASE
				node0->SetAgentType("FisrtAgent");
#endif
				// attachments
				{
					Event_bt_sub_attach2* attach2 = BEHAVIAC_NEW Event_bt_sub_attach2;
					attach2->SetClassNameString("Event");
					attach2->SetId(2);
#if !BEHAVIAC_RELEASE
					attach2->SetAgentType("FisrtAgent");
#endif
					attach2->Initialize("Self.FisrtAgent::event_task(0)", "main", TM_Transfer, false);
					node0->Attach(attach2, false, false, false);
					node0->SetHasEvents(node0->HasEvents() | (Event::DynamicCast(attach2) != 0));
				}
				pBT->AddChild(node0);
				{
					Action_bt_sub_node1* node1 = BEHAVIAC_NEW Action_bt_sub_node1;
					node1->SetClassNameString("Action");
					node1->SetId(1);
#if !BEHAVIAC_RELEASE
					node1->SetAgentType("FisrtAgent");
#endif
					node0->AddChild(node1);
					node0->SetHasEvents(node0->HasEvents() | node1->HasEvents());
				}
				{
					Assignment_bt_sub_node4* node4 = BEHAVIAC_NEW Assignment_bt_sub_node4;
					node4->SetClassNameString("Assignment");
					node4->SetId(4);
#if !BEHAVIAC_RELEASE
					node4->SetAgentType("FisrtAgent");
#endif
					node0->AddChild(node4);
					node0->SetHasEvents(node0->HasEvents() | node4->HasEvents());
				}
				{
					Condition_bt_sub_node5* node5 = BEHAVIAC_NEW Condition_bt_sub_node5;
					node5->SetClassNameString("Condition");
					node5->SetId(5);
#if !BEHAVIAC_RELEASE
					node5->SetAgentType("FisrtAgent");
#endif
					node0->AddChild(node5);
					node0->SetHasEvents(node0->HasEvents() | node5->HasEvents());
				}
				{
					Action_bt_sub_node3* node3 = BEHAVIAC_NEW Action_bt_sub_node3;
					node3->SetClassNameString("Action");
					node3->SetId(3);
#if !BEHAVIAC_RELEASE
					node3->SetAgentType("FisrtAgent");
#endif
					node0->AddChild(node3);
					node0->SetHasEvents(node0->HasEvents() | node3->HasEvents());
				}
				pBT->SetHasEvents(pBT->HasEvents() | node0->HasEvents());
			}
			return true;
		}
	};

}
#endif // _BEHAVIAC_GENERATED_BEHAVIORS_H_
